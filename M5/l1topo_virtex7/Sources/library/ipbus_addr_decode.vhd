-- Address decode logic for ipbus fabric
--
-- This file has been AUTOGENERATED from the address table - do not hand edit
--
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
--
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;
use work.ipbus.all;

package ipbus_addr_decode is

  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer;

end ipbus_addr_decode;

package body ipbus_addr_decode is
  
  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
                -- START automatically  generated VHDL the Fri Aug  8 00:12:57 2014 
		if    std_match(addr, "--0---------0-0---0000000-000001") then
			sel := 0; -- ipbusBridgeErrorCounter / base 0x00000001 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---10------------") then
            sel := 1; -- TestRAM / base 0x00002000 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000000-000010") then
            sel := 14; -- ttcIDelayValue / base 0x00000002 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---0000000-000011") then
            sel := 15; -- ttcIDelayCurrentValue / base 0x00000003 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---0000000-000100") then
            sel := 16; -- ttcErrorCounter / base 0x00000004 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---0000000-000101") then
            sel := 17; -- ttcErrorCounterReset / base 0x00000005 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---0000000-000110") then
            sel := 21; -- ipbScopeControl / base 0x00000006 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---0000000-0010--") then
            sel := 22; -- debugParameters / base 0x00000008 / mask 0x200a17bf
            	
		elsif std_match(addr, "--0---------0-0---0000000-010000") then
			sel := 2; -- PlaybackSpyControl / base 0x00000010 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000000-010001") then
			sel := 3; -- PlaybackCharIsKFakingMGTs / base 0x00000011 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000000-010010") then
			sel := 5; -- SpyCharIsKFromMGTs / base 0x00000012 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000000-100000") then
			sel := 10; -- QuadControl / base 0x00000020 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000001-000000") then
			sel := 9; -- ChannelControl / base 0x00000080 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000010-000000") then
			sel := 11; -- ChannelStatus / base 0x00000100 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000011-000000") then
			sel := 12; -- DataDelay / base 0x00000180 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---0000100-000000") then
			sel := 13; -- CRCErrorCounter / base 0x00000200 / mask 0x200a17bf
		elsif std_match(addr, "--0---------0-0---1100----------") then
			sel := 8; -- PlaybackSpyDataOfAlgoResults / base 0x00003000 / mask 0x200a17bf
		
		elsif std_match(addr, "--0---------0-0---1101----------") then
            sel := 18; -- ipbScopeDebugJetArray / base 0x00003400 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---1110----------") then
            sel := 19; -- ipbScopeDebugGenericArray / base 0x00003800 / mask 0x200a17bf
        elsif std_match(addr, "--0---------0-0---1111----------") then
            sel := 20; -- ipbScopeDebugDPhi / base 0x00003C00 / mask 0x200a17bf
        
		
		elsif std_match(addr, "--0---------1-0-----------------") then
			sel := 4; -- PlaybackSpyDataOfMGTs / base 0x00080000 / mask 0x200a17bf
		elsif std_match(addr, "--0---------1-1-----------------") then
			sel := 6; -- PlaybackSpyDataOfDeserialisers / base 0x000a0000 / mask 0x200a17bf
		elsif std_match(addr, "--1-----------------------------") then
			sel := 7; -- Parameters / base 0x20000000 / mask 0x200a17bf
		
		-- END automatic generated VHDL

                else
                        sel := 99;
                end if;
                return sel;
  end ipbus_addr_sel;
                
end ipbus_addr_decode;

