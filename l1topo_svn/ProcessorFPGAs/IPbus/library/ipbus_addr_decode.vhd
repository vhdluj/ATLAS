-- Address decode logic for ipbus fabric
--
-- This file has been AUTOGENERATED from the address table - do not hand edit
--
-- We assume the synthesis tool is clever enough to recognise exclusive conditions
-- in the if statement.
--
-- Dave Newbold, February 2011

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use ieee.numeric_std.all;
use work.ipbus.all;

package ipbus_addr_decode is

  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer;

end ipbus_addr_decode;

package body ipbus_addr_decode is
  
  function ipbus_addr_sel(signal addr : in std_logic_vector(31 downto 0)) return integer is
    variable sel : integer;
  begin
                -- START automatically  generated VHDL the Tue Jan 21 22:26:41 2014 
		if    std_match(addr, "-------------------0-------0000-") then
			sel := 0; -- test_rw / base 0x00000000 / mask 0x0000101e
		elsif std_match(addr, "-------------------0-------0001-") then
			sel := 1; -- test_ro / base 0x00000002 / mask 0x0000101e
		elsif std_match(addr, "-------------------0-------0010-") then
			sel := 2; -- ctrlbus_value / base 0x00000004 / mask 0x0000101e
		elsif std_match(addr, "-------------------0-------0100-") then
			sel := 3; -- ctrlbus_load / base 0x00000008 / mask 0x0000101e
		elsif std_match(addr, "-------------------0-------1000-") then
			sel := 4; -- trigger_counter / base 0x00000010 / mask 0x0000101e
		elsif std_match(addr, "-------------------0-------1001-") then
			sel := 5; -- ctrlbus_error_counter / base 0x00000012 / mask 0x0000101e
		elsif std_match(addr, "-------------------1------------") then
			sel := 6; -- RAM / base 0x00001000 / mask 0x0000101e
		-- END automatic generated VHDL

                else
                        sel := 99;
                end if;
                return sel;
  end ipbus_addr_sel;
                
end ipbus_addr_decode;

